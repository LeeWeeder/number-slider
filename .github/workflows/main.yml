name: Update Sample App Version

on:
  push:
    tags:
      - '*' # Trigger on any tag push

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Extract version from tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          VERSION_NAME=$LATEST_TAG # No need to remove 'v' prefix
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Calculate versionCode
        run: |
          MAJOR=$(echo $VERSION_NAME | cut -d. -f1)
          MINOR=$(echo $VERSION_NAME | cut -d. -f2)
          PATCH=$(echo $VERSION_NAME | cut -d. -f3)
          VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Edit build.gradle.kts
        run: |
          sed -i "s/versionName = \"[^\"]*\"/versionName = \"${VERSION_NAME}\"/g" app/build.gradle.kts
          sed -i "s/versionCode = [0-9]\+/versionCode = ${VERSION_CODE}/g" app/build.gradle.kts

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with: 
          branch: version-update-${{ env.VERSION_NAME }}
          commit-message: Update sample version to ${{ env.VERSION_NAME }}
          base: main
          title: "Automated PR: Update sample app version"
          body: |
            This PR was automatically created by a GitHub Actions workflow.

      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Enable Pull Request Automerge
        run: gh pr merge --merge --admin ${{ steps.cpr.outputs.pull-request-number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
        
      - name: Setup JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks

      - name: Build app
        run: ./gradlew app:assembleRelease \
          -Pandroid.signingConfig.storeFile=keystore.jks \
          -Pandroid.signingConfig.storePassword=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.signingConfig.keyAlias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.signingConfig.keyPassword=${{ secrets.KEY_PASSWORD }}
      
      - name: Rename file
        run: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/sample.apk

      - name: Release
        uses: softprops/action-gh-release@v2.0.7
        with:
          files: app/build/outputs/apk/release/sample.apk
